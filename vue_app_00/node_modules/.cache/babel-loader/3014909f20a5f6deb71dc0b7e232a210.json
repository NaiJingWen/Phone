{"remainingRequest":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\src\\components\\testContainer.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\src\\components\\testContainer.vue","mtime":1541125298394},{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      msg: \"脚手架\"\n    };\n  },\n  methods: {\n    show: function show() {\n      console.log(\"执行 show 方法\");\n    },\n    beforeCreate: function beforeCreate() {//生命周期第一个函数，实例被创建'之前'，会执行它\n      //注意：执行函数时,data和methods还没有初始化\n      //console.log(this.msg);//undefined\n      //this.show();//报错\n    },\n    created: function created() {\n      //生命周期的第二个函数，实例被创建之后\n      //注意：在执行函数值data和methods已经初始化好了\n      this.show();\n      console.log(this.msg);\n    },\n    beforeMount: function beforeMount() {\n      //声明周期的第三个函数，模板已经在内存中编辑完成，但是还没有将模板渲染到页面上\n      var h3 = document.ElementById(\"h3\");\n      console.log(h3); //报错\n\n      conosle.log(h3.innerText); //报错\n    },\n    mounted: function mounted() {\n      //生命周期的第四个函数，模板已经在内存中编译完成，把模板渲染到页面结束\n      //mounted 实例创建最后一个声明周期函数，当执行完mounted表示实例已经完全创建好了\n      //如果没有其他操作。就静静的躺在内存中一动不动\n      var h3 = document.ElementById(\"h3\");\n      console.log(\"4\" + h3.innerText);\n    },\n    beforeUpdate: function beforeUpdate() {\n      //接下来运行第二个事件\n      //当执行beforeUpdata 页面中显示数据旧\n      //此时                    data数据新\n      console.log(\"5:内存中DATA变量\" + this.msg);\n      var h3 = document.getElementById(\"h3\");\n      console.log(\"5:模板中数据:\" + h3.innerText);\n    },\n    updated: function updated() {\n      console.log(\"6:内存的Data\" + this.msg);\n      var h3 = document.getElementById(\"h3\");\n      console.log(\"6:模板中数据:\" + h3.innerText);\n    }\n  }\n};",{"version":3,"sources":["testContainer.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AAAA,WAAA;AAAA,KAAA;AACA,GAHA;AAIA,WAAA;AACA,QADA,kBACA;AACA,cAAA,GAAA,CAAA,YAAA;AACA,KAHA;AAIA,gBAJA,0BAIA,CACA;AACA;AACA;AACA;AACA,KATA;AAUA,WAVA,qBAUA;AACA;AACA;AACA,WAAA,IAAA;AACA,cAAA,GAAA,CAAA,KAAA,GAAA;AACA,KAfA;AAgBA,eAhBA,yBAgBA;AACA;AACA,UAAA,KAAA,SAAA,WAAA,CAAA,IAAA,CAAA;AACA,cAAA,GAAA,CAAA,EAAA,EAHA,CAGA;;AACA,cAAA,GAAA,CAAA,GAAA,SAAA,EAJA,CAIA;AACA,KArBA;AAsBA,WAtBA,qBAsBA;AACA;AACA;AACA;AACA,UAAA,KAAA,SAAA,WAAA,CAAA,IAAA,CAAA;AACA,cAAA,GAAA,CAAA,MAAA,GAAA,SAAA;AACA,KA5BA;AA6BA,gBA7BA,0BA6BA;AACA;AACA;AACA;AACA,cAAA,GAAA,CAAA,gBAAA,KAAA,GAAA;AACA,UAAA,KAAA,SAAA,cAAA,CAAA,IAAA,CAAA;AACA,cAAA,GAAA,CAAA,aAAA,GAAA,SAAA;AACA,KApCA;AAqCA,WArCA,qBAqCA;AACA,cAAA,GAAA,CAAA,cAAA,KAAA,GAAA;AACA,UAAA,KAAA,SAAA,cAAA,CAAA,IAAA,CAAA;AACA,cAAA,GAAA,CAAA,aAAA,GAAA,SAAA;AACA;AAzCA;AAJA,CAAA","sourcesContent":["<template>\r\n    <div class=\"app-testContainer\">\r\n        <h1>testContainer.vue</h1>\r\n        <h1>生命周期</h1>\r\n        <h1>当前vue 实例创建后自动触发事件</h1> \r\n        <h1>当前调用一些函数(钩子函数)</h1>               \r\n        <input type=\"button\" value=\"修改\" @click=\"msg='ok'\"/>\r\n        <p id=\"h3\">{{msg}}</p>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data(){\r\n            return {msg:\"脚手架\"}\r\n        },\r\n        methods:{\r\n            show() {\r\n                console.log(\"执行 show 方法\");\r\n            },\r\n            beforeCreate() {\r\n                //生命周期第一个函数，实例被创建'之前'，会执行它\r\n                //注意：执行函数时,data和methods还没有初始化\r\n                //console.log(this.msg);//undefined\r\n                //this.show();//报错\r\n            },\r\n            created() {\r\n                //生命周期的第二个函数，实例被创建之后\r\n                //注意：在执行函数值data和methods已经初始化好了\r\n                this.show();\r\n                console.log(this.msg);\r\n            },\r\n            beforeMount() {\r\n                //声明周期的第三个函数，模板已经在内存中编辑完成，但是还没有将模板渲染到页面上\r\n                var h3 = document.ElementById(\"h3\");\r\n                console.log(h3);//报错\r\n                conosle.log(h3.innerText);//报错\r\n            },\r\n            mounted() {\r\n                //生命周期的第四个函数，模板已经在内存中编译完成，把模板渲染到页面结束\r\n                //mounted 实例创建最后一个声明周期函数，当执行完mounted表示实例已经完全创建好了\r\n                //如果没有其他操作。就静静的躺在内存中一动不动\r\n                var h3=document.ElementById(\"h3\");\r\n                console.log(\"4\"+h3.innerText);\r\n            },\r\n            beforeUpdate() {\r\n                //接下来运行第二个事件\r\n                //当执行beforeUpdata 页面中显示数据旧\r\n                //此时                    data数据新\r\n                console.log(\"5:内存中DATA变量\"+this.msg);\r\n                var h3 = document.getElementById(\"h3\");\r\n                console.log(\"5:模板中数据:\"+h3.innerText);\r\n            },\r\n            updated() {\r\n                console.log(\"6:内存的Data\"+this.msg);\r\n                var h3 = document.getElementById(\"h3\");\r\n                console.log(\"6:模板中数据:\"+h3.innerText);                \r\n            },\r\n        }\r\n    }\r\n</script>\r\n<style>   \r\n</style>"],"sourceRoot":"src\\components"}]}