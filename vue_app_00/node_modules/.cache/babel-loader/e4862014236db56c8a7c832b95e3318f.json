{"remainingRequest":"C:\\Users\\web\\Desktop\\PhonePro\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\PhonePro\\vue_app_00\\src\\main.js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\PhonePro\\vue_app_00\\src\\main.js","mtime":1541466862309},{"path":"C:\\Users\\web\\Desktop\\PhonePro\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\PhonePro\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //引入mint-ui的css文件\n\nimport 'mint-ui/lib/style.css';\nVue.config.productionTip = false; //引入mui的css文件\n\nimport './lib/mui/css/mui.css';\nimport './lib/mui/css/icons-extra.css'; //引入组件民退库Header\n//按需引入\n//1.引入指定的组件\n// import {Button,Header,Swipe,SwipeItem,Lazyload} from \"mint-ui\";\n// //2.注册当前项目中   (标签名称,...)   <mt-header>\n// Vue.component(Button.name,Button);\n// Vue.component(Header.name,Header);\n// Vue.component(Swipe.name,Swipe);//<mt-swipe>\n// Vue.component(SwipeItem.name,SwipeItem);\n// Vue.use(Lazyload);\n//完整引入\n\nimport MintUI from \"mint-ui\";\nVue.use(MintUI); //2.引入vue-resource 发送ajax请求\n//1.引入vue-resource  库所有组件\n\nimport VueResource from \"vue-resource\"; //2.经所有组件注册\n\nVue.use(VueResource); //3.main.js 创建过滤器\n//val 是原来的日期对象  格式不好的那个 return返回一个日期格式对象\n\n/*Vue.filter(\"dataFilter\",function(val){\r\n  var data=new Date(val);   //创建日期对象  \r\n  var y=data.getFullYear(); //获取年份\r\n  var m=data.getMonth()+1;  //获取月份\r\n  var d=data.getDate();     //获取日期\r\n  m<10&&(m=\"0\"+m);          //如果月份小于10加前缀0\r\n  d<10&&(d=\"0\"+d);          //如果日小于10加前缀0\r\n  return `${y}-${m}-${d}`;  //拼接字符串\r\n});\r\n*/\n//练习：创建过滤器 年月日 时:分:秒\n\nVue.filter(\"datatimeFilter\", function (val) {\n  var data = new Date(val); //创建日期对象  \n\n  var y = data.getFullYear(); //获取年份\n\n  var m = data.getMonth() + 1; //获取月份\n\n  var d = data.getDate(); //创建日期对象  \n\n  var h = data.getHours(); //获取小时\n\n  var mi = data.getMinutes(); //获取分钟\n\n  var s = data.getSeconds(); //获取秒数\n\n  m < 10 && (m = \"0\" + m);\n  d < 10 && (d = \"0\" + d);\n  return \"\".concat(y, \"-\").concat(m, \"-\").concat(d, \" \").concat(h, \":\").concat(mi, \":\").concat(s); //拼接字符串\n}); //配置信息  Vueresource服务器根目录\n\nVue.http.options.root = \"http://127.0.0.1:3000/\"; //修改请求头  post格式发送正确\n//Vue.http.options.emulateJSON=true;\n//4.创建一个Vuex的实例对象\n//4.1下载安装Vuex npm i vuex -D\n//4.2引入Vuex\n\nimport Vuex from \"vuex\"; //4.3注册Vuex实例\n\nVue.use(Vuex); //4.4创建Vuex实例对象\n\nvar store = new Vuex.Store({\n  state: {\n    count: 0\n  },\n  //购物车中商品的数量    全局状态\n  mutations: {\n    //操作状态方法\n    increment: function increment(state, c) {\n      state.count += parseInt;\n    },\n    //修改共享数据的两个方法\n    substract: function substract(state) {\n      state.count--;\n    } //参数共享数据属性\n\n  },\n  getters: {\n    //获取状态方法\n    optCount: function optCount(state) {\n      return state.count; //返回共享数据\n    }\n  }\n}); //5.将Vuex实例对象注册Vue实例\n\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","config","productionTip","MintUI","use","VueResource","filter","val","data","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","mi","getMinutes","s","getSeconds","http","options","root","Vuex","store","Store","state","count","mutations","increment","c","parseInt","substract","getters","optCount","render","$mount"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAM,uBAAN;AACAF,IAAIG,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CAEA;;AACA,OAAO,uBAAP;AACA,OAAO,+BAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACAL,IAAIM,GAAJ,CAAQD,MAAR,E,CAGA;AACA;;AACA,OAAOE,WAAP,MAAwB,cAAxB,C,CACA;;AACAP,IAAIM,GAAJ,CAAQC,WAAR,E,CAEA;AACA;;AACA;;;;;;;;;;AAWA;;AACAP,IAAIQ,MAAJ,CAAW,gBAAX,EAA4B,UAASC,GAAT,EAAa;AACvC,MAAIC,OAAK,IAAIC,IAAJ,CAASF,GAAT,CAAT,CADuC,CACb;;AAC1B,MAAIG,IAAEF,KAAKG,WAAL,EAAN,CAFuC,CAEb;;AAC1B,MAAIC,IAAEJ,KAAKK,QAAL,KAAgB,CAAtB,CAHuC,CAGb;;AAC1B,MAAIC,IAAEN,KAAKO,OAAL,EAAN,CAJuC,CAId;;AACzB,MAAIC,IAAER,KAAKS,QAAL,EAAN,CALuC,CAKT;;AAC9B,MAAIC,KAAGV,KAAKW,UAAL,EAAP,CANuC,CAMZ;;AAC3B,MAAIC,IAAEZ,KAAKa,UAAL,EAAN,CAPuC,CAOV;;AAC7BT,MAAE,EAAF,KAAOA,IAAE,MAAIA,CAAb;AACAE,MAAE,EAAF,KAAOA,IAAE,MAAIA,CAAb;AACA,mBAAUJ,CAAV,cAAeE,CAAf,cAAoBE,CAApB,cAAyBE,CAAzB,cAA8BE,EAA9B,cAAoCE,CAApC,EAVuC,CAUG;AAC3C,CAXD,E,CAaA;;AACAtB,IAAIwB,IAAJ,CAASC,OAAT,CAAiBC,IAAjB,GAAsB,wBAAtB,C,CACA;AACA;AAGA;AACG;AACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA3B,IAAIM,GAAJ,CAAQqB,IAAR,E,CACA;;AACA,IAAIC,QAAM,IAAID,KAAKE,KAAT,CAAe;AACvBC,SAAM;AAACC,WAAM;AAAP,GADiB;AACP;AAChBC,aAAU;AAAC;AACTC,aADQ,qBACEH,KADF,EACQI,CADR,EACU;AAChBJ,YAAMC,KAAN,IAAaI,QAAb;AACF,KAHQ;AAGP;AACDC,aAJQ,qBAIEN,KAJF,EAIQ;AACdA,YAAMC,KAAN;AACD,KANO,CAMN;;AANM,GAFa;AAUvBM,WAAQ;AAAC;AACPC,cAAS,kBAASR,KAAT,EAAe;AACtB,aAAOA,MAAMC,KAAb,CADsB,CACH;AACpB;AAHK;AAVe,CAAf,CAAV,C,CAgBH;;AAKA,IAAI/B,GAAJ,CAAQ;AACNE,gBADM;AAENqC,UAAQ;AAAA,WAAKrB,EAAEjB,GAAF,CAAL;AAAA,GAFF;AAGN2B;AAHM,CAAR,EAIGY,MAJH,CAIU,MAJV","sourceRoot":"C:\\Users\\web\\Desktop\\PhonePro\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n//引入mint-ui的css文件\r\nimport'mint-ui/lib/style.css'\r\nVue.config.productionTip = false\r\n\r\n//引入mui的css文件\r\nimport './lib/mui/css/mui.css'\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n//引入组件民退库Header\r\n//按需引入\r\n//1.引入指定的组件\r\n// import {Button,Header,Swipe,SwipeItem,Lazyload} from \"mint-ui\";\r\n// //2.注册当前项目中   (标签名称,...)   <mt-header>\r\n// Vue.component(Button.name,Button);\r\n// Vue.component(Header.name,Header);\r\n// Vue.component(Swipe.name,Swipe);//<mt-swipe>\r\n// Vue.component(SwipeItem.name,SwipeItem);\r\n// Vue.use(Lazyload);\r\n\r\n//完整引入\r\nimport MintUI from \"mint-ui\";\r\nVue.use(MintUI);\r\n\r\n\r\n//2.引入vue-resource 发送ajax请求\r\n//1.引入vue-resource  库所有组件\r\nimport VueResource from \"vue-resource\";\r\n//2.经所有组件注册\r\nVue.use(VueResource);\r\n\r\n//3.main.js 创建过滤器\r\n//val 是原来的日期对象  格式不好的那个 return返回一个日期格式对象\r\n/*Vue.filter(\"dataFilter\",function(val){\r\n  var data=new Date(val);   //创建日期对象  \r\n  var y=data.getFullYear(); //获取年份\r\n  var m=data.getMonth()+1;  //获取月份\r\n  var d=data.getDate();     //获取日期\r\n  m<10&&(m=\"0\"+m);          //如果月份小于10加前缀0\r\n  d<10&&(d=\"0\"+d);          //如果日小于10加前缀0\r\n  return `${y}-${m}-${d}`;  //拼接字符串\r\n});\r\n*/\r\n\r\n//练习：创建过滤器 年月日 时:分:秒\r\nVue.filter(\"datatimeFilter\",function(val){\r\n  var data=new Date(val);   //创建日期对象  \r\n  var y=data.getFullYear(); //获取年份\r\n  var m=data.getMonth()+1;  //获取月份\r\n  var d=data.getDate();    //创建日期对象  \r\n  var h=data.getHours();        //获取小时\r\n  var mi=data.getMinutes();  //获取分钟\r\n  var s=data.getSeconds();     //获取秒数\r\n  m<10&&(m=\"0\"+m);          \r\n  d<10&&(d=\"0\"+d); \r\n  return `${y}-${m}-${d} ${h}:${mi}:${s}`;  //拼接字符串\r\n});\r\n\r\n//配置信息  Vueresource服务器根目录\r\nVue.http.options.root=\"http://127.0.0.1:3000/\";\r\n//修改请求头  post格式发送正确\r\n//Vue.http.options.emulateJSON=true;\r\n\r\n\r\n//4.创建一个Vuex的实例对象\r\n   //4.1下载安装Vuex npm i vuex -D\r\n   //4.2引入Vuex\r\n   import Vuex from \"vuex\"\r\n   //4.3注册Vuex实例\r\n   Vue.use(Vuex);\r\n   //4.4创建Vuex实例对象\r\n   var store=new Vuex.Store({\r\n     state:{count:0},//购物车中商品的数量    全局状态\r\n     mutations:{//操作状态方法\r\n       increment(state,c){\r\n         state.count+=parseInt;\r\n      },//修改共享数据的两个方法\r\n       substract(state){\r\n         state.count--;\r\n       } //参数共享数据属性\r\n     },\r\n     getters:{//获取状态方法\r\n       optCount:function(state){\r\n         return state.count;//返回共享数据\r\n       }\r\n     }\r\n   });\r\n//5.将Vuex实例对象注册Vue实例\r\n\r\n\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  store\r\n}).$mount('#app')\r\n"]}]}