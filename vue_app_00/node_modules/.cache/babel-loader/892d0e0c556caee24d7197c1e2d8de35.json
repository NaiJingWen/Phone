{"remainingRequest":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\src\\components\\tabbar\\ShopCountainer.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\src\\components\\tabbar\\ShopCountainer.vue","mtime":1541399720307},{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\ww\\WW07\\1807\\19PROJECT07\\7\\Wen_pro\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//父组件 GoodInfo.vue\n//1.引入子组件\nimport swiper from '../sub/swiper.vue'; //2.注册当前对象\n//3.在模板中调用轮播图文件\n//4.data声明数组组件\n//5.发送异步请求获取图片列保存data\n\nexport default {\n  data: function data() {\n    return {\n      imagelist: [],\n      cartList: [] //购物车列表\n\n    };\n  },\n  methods: {\n    getCartList: function getCartList() {\n      var _this = this;\n\n      this.$http.get(\"shopCart\").then(function (result) {\n        _this.cartList = result.body;\n      });\n    },\n    cartAdd: function cartAdd(id) {\n      //1.获取数组中的每个元素\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.cartList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          //2.判断参数中id与当前元素id是否相同\n          if (item.id == id) {\n            //3.当前元素数量+1\n            item.count++;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    cartSub: function cartSub(id) {\n      //1.获取数组中的每个元素\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.cartList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          //2.判断参数中id与当前元素id是否相同\n          if (item.id == id) {\n            if (item.count < 2) return; //3.当前元素数量+1\n\n            item.count--;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    //服务器返回模拟数据[id;title;now;old;商品编号]\n    //参数:商品id\n    getImageList: function getImageList() {\n      var _this2 = this;\n\n      this.$http.get(\"imagelist\").then(function (result) {\n        _this2.imagelist = result.body;\n      });\n    }\n  },\n  created: function created() {\n    this.getImageList();\n    this.getCartList(); //console.log(this.$route.query.id);//方法一\n    //console.log(this.$route.params.id);//方法二  \n  },\n  components: {\n    \"swiper-box\": swiper\n  },\n  computed: {\n    //计算属性\n    getSubTotal: function getSubTotal() {\n      //计算商品累加和返回\n      //1.创建临时变量\n      var sum = 0; //2.创建循环\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.cartList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          //3.计算累加和\n          sum += item.price * item.count;\n        } //4.返回累加结果 \n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return sum;\n    }\n  }\n};",{"version":3,"sources":["ShopCountainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA,OAAA,MAAA,MAAA,mBAAA,C,CACA;AACA;AACA;AACA;;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,iBAAA,EADA;AAEA,gBAAA,EAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,eADA,yBACA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,UAAA,EAAA,IAAA,CAAA,kBAAA;AACA,cAAA,QAAA,GAAA,OAAA,IAAA;AACA,OAFA;AAGA,KALA;AAMA,WANA,mBAMA,EANA,EAMA;AACA;AADA;AAAA;AAAA;;AAAA;AAEA,6BAAA,KAAA,QAAA,8HAAA;AAAA,cAAA,IAAA;;AACA;AACA,cAAA,KAAA,EAAA,IAAA,EAAA,EAAA;AACA;AACA,iBAAA,KAAA;AACA;AACA;AAEA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAjBA;AAkBA,WAlBA,mBAkBA,EAlBA,EAkBA;AACA;AADA;AAAA;AAAA;;AAAA;AAEA,8BAAA,KAAA,QAAA,mIAAA;AAAA,cAAA,IAAA;;AACA;AACA,cAAA,KAAA,EAAA,IAAA,EAAA,EAAA;AACA,gBAAA,KAAA,KAAA,GAAA,CAAA,EAAA,OADA,CAEA;;AACA,iBAAA,KAAA;AACA;AACA;AAEA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KA9BA;AA+BA;AACA;AACA,gBAjCA,0BAiCA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,WAAA,EAAA,IAAA,CAAA,kBAAA;AACA,eAAA,SAAA,GAAA,OAAA,IAAA;AACA,OAFA;AAGA;AArCA,GAPA;AA8CA,SA9CA,qBA8CA;AACA,SAAA,YAAA;AACA,SAAA,WAAA,GAFA,CAGA;AACA;AACA,GAnDA;AAoDA,cAAA;AACA,kBAAA;AADA,GApDA;AAuDA,YAAA;AAAA;AACA,iBAAA,uBAAA;AACA;AACA;AACA,UAAA,MAAA,CAAA,CAHA,CAIA;;AAJA;AAAA;AAAA;;AAAA;AAKA,8BAAA,KAAA,QAAA,mIAAA;AAAA,cAAA,IAAA;AACA;AACA,iBAAA,KAAA,KAAA,GAAA,KAAA,KAAA;AACA,SARA,CASA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,aAAA,GAAA;AACA;AAZA;AAvDA,CAAA","sourcesContent":["<template>\r\n    <div class=\"app-shop\">\r\n        <!--1.图片轮播-->\r\n        <div class=\"mui-card\">\r\n            <div class=\"mui-card-content\">\r\n                <div class=\"mui-card-content-inner\">\r\n                    <swiper-box :list=\"imagelist\"></swiper-box>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n        <!--2.商品列表-->\r\n        <div class=\"mui-card\">\r\n          <div class=\"mui-card-header\">商品列表</div>\r\n            <div class=\"mui-card-content\">\r\n                <div class=\"mui-card-content-inner\">\r\n                    <!--2.1mui 左侧是图片右侧是文字-->\r\n                    <ul class=\"mui-table-view\">\r\n                        <li class=\"mui-table-view-cell mui-media\" v-for=\"item in cartList\" :key=\"item.id\">\r\n                            <a href=\"javascript:;\">\r\n                                <img class=\"mui-media-object mui-pull-left\" src=\"\">\r\n                                <div class=\"mui-media-body\">\r\n                                    {{item.title}}\r\n                                    <p class='mui-ellipsis'>\r\n                                        <span class=\"price\">{{item.price}}</span>\r\n                                        <span class=\"count\">\r\n                                            <!--2.2mui 数字按钮-->\r\n                                            <div class=\"mui-numbox\" data-numbox-min='1' data-numbox-max='9'>\r\n                                                <button class=\"mui-btn mui-btn-numbox-minus\" type=\"button\" @click=\"cartSub(item.id)\">-</button>\r\n                                                <input id=\"test\" class=\"mui-input-numbox\" type=\"number\" :value=\"item.count\"/>\r\n                                                <button class=\"mui-btn mui-btn-numbox-plus\" type=\"button\" @click=\"cartAdd(item.id)\">+</button>\r\n                                            </div>      \r\n                                        </span> \r\n                                    </p>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>                        \r\n                </div>\r\n            </div>\r\n           <div class=\"mui-card-footer\">合计:{{getSubTotal}}</div>  \r\n          </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    //父组件 GoodInfo.vue\r\n    //1.引入子组件\r\n    import swiper from '../sub/swiper.vue';\r\n    //2.注册当前对象\r\n    //3.在模板中调用轮播图文件\r\n    //4.data声明数组组件\r\n    //5.发送异步请求获取图片列保存data\r\n    export default {\r\n        data(){\r\n            return{\r\n                imagelist:[],\r\n                cartList:[],//购物车列表\r\n            }\r\n        },\r\n        methods:{\r\n            getCartList(){\r\n                this.$http.get(\"shopCart\").then(result=>{\r\n                    this.cartList = result.body;\r\n                })\r\n            },\r\n            cartAdd(id){\r\n                //1.获取数组中的每个元素\r\n                for(var item of this.cartList){\r\n                  //2.判断参数中id与当前元素id是否相同\r\n                  if(item.id==id){\r\n                    //3.当前元素数量+1\r\n                    item.count++;\r\n                    break;  \r\n                  }\r\n                                      \r\n                }\r\n            },\r\n            cartSub(id){\r\n                //1.获取数组中的每个元素\r\n                for(var item of this.cartList){\r\n                  //2.判断参数中id与当前元素id是否相同\r\n                  if(item.id==id){\r\n                      if(item.count<2) return;\r\n                    //3.当前元素数量+1\r\n                    item.count--;\r\n                    break;  \r\n                  }\r\n                                      \r\n                }\r\n            },\r\n            //服务器返回模拟数据[id;title;now;old;商品编号]\r\n            //参数:商品id\r\n            getImageList(){\r\n                this.$http.get(\"imagelist\").then(result=>{\r\n                    this.imagelist=result.body;\r\n                });\r\n            }\r\n        },\r\n        created() {\r\n            this.getImageList();\r\n            this.getCartList();\r\n            //console.log(this.$route.query.id);//方法一\r\n            //console.log(this.$route.params.id);//方法二  \r\n        },\r\n        components:{\r\n            \"swiper-box\":swiper\r\n        },\r\n        computed:{//计算属性\r\n            getSubTotal:function(){\r\n                //计算商品累加和返回\r\n                   //1.创建临时变量\r\n                   var sum=0;\r\n                   //2.创建循环\r\n                   for(var item of this.cartList){\r\n                    //3.计算累加和\r\n                    sum+=item.price*item.count;   \r\n                   }\r\n                    //4.返回累加结果 \r\n                    return sum;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    .app-shop .mui-card .mui-card-content-inner ul .mui-media-body .count .mui-numbox{\r\n        margin-left:113px;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\tabbar"}]}